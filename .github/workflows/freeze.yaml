---
name: Create instawow executables
on:
  push:
    # tags:
    # - v*
defaults:
  run:
    shell: bash
jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      instawow-version: ${{ steps.get-version.outputs.INSTAWOW_VERSION }}
    steps:
    - name: Clone the repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install setuptools-scm
      run: |
        python -m pip install setuptools-scm[toml]
    - name: Grab the version
      id: get-version
      run: |
        echo "::set-output name=INSTAWOW_VERSION::$(python -c "
        import setuptools_scm
        print(setuptools_scm.get_version())
        ")"
  freeze-cli:
    needs: get-version
    strategy:
      matrix:
        os: [macos-latest, ubuntu-18.04, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Clone the repo
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Build instawow dists and generate a `requirements.txt` for pyoxidizer
      run: |
        python -m pip install nox
        python -m nox -s build
        echo "../$(find dist -name instawow-*${{ matrix.os == 'windows-latest' && '.tar.gz' || '.whl' }})" \
          > instawow-standalone/requirements.txt
    - name: Install and run pyoxidizer
      run: |
        python -m pip install pyoxidizer
        LD_LIBRARY_PATH= pyoxidizer build --release | tee >(
          output_folder=$(tail -n 1 | cut -c 21-)
          cp -R $output_folder dist
        )
      working-directory: instawow-standalone
    - name: Upload output
      uses: actions/upload-artifact@v2
      with:
        name: instawow-cli-${{ matrix.os }}-${{ needs.get-version.outputs.instawow-version }}
        path: instawow-standalone/dist
  freeze-gui:
    needs: get-version
    strategy:
      matrix:
        build-env:
        - os: macos-latest
          python-version: '3.9'
          briefcase-build-opts: ''
          briefcase-package-opts: '--no-sign'
        - os: ubuntu-18.04
          python-version: '3.9'
          briefcase-build-opts: '--no-docker'
          briefcase-package-opts: ''
        - os: windows-latest
          python-version: '3.8'
          briefcase-build-opts: ''
          briefcase-package-opts: ''
      fail-fast: false
    runs-on: ${{ matrix.build-env.os }}
    steps:
    - name: Clone the repo
      uses: actions/checkout@v2
    - name: Install briefcase Linux dependencies
      run: sudo apt-get update --fix-missing && sudo apt-get install -y
        libgirepository1.0-dev libcairo2-dev libpango1.0-dev libwebkitgtk-3.0-dev gir1.2-webkit-3.0
        libgdbm-dev
      if: matrix.build-env.os == 'ubuntu-18.04'
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.build-env.python-version }}
    - name: Bundle the frontend
      run: |
        npm install
        npx rollup -c
      working-directory: gui-webview/frontend
    - name: Patch in the version number
      run: sed -i 's/version = "0.1.0"/version = "${{ needs.get-version.outputs.instawow-version }}"/'
          pyproject.toml
      if: >
        !contains(needs.get-version.outputs.instawow-version, 'dev')
      working-directory: gui-webview
    - name: Install and run briefcase
      run: |
        python -m pip install briefcase
        briefcase build ${{ matrix.build-env.briefcase-build-opts }}
        briefcase package ${{ matrix.build-env.briefcase-package-opts }} | tee >(
          echo "INSTAWOW_ARTIFACT_PATH=gui-webview/$(tail -n 1 | cut -c 33-)" >> $GITHUB_ENV
        )
      working-directory: gui-webview
    - name: Upload output
      uses: actions/upload-artifact@v2
      with:
        name: instawow-gui-${{ matrix.build-env.os }}-${{ needs.get-version.outputs.instawow-version }}
        path: ${{ env.INSTAWOW_ARTIFACT_PATH }}
