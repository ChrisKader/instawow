---
name: Create instawow executables
on:
  push:
    # tags:
    # - v*
defaults:
  run:
    shell: bash
jobs:
  extract-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.TAG }}
    steps:
    - name: Clone the repo
      uses: actions/checkout@v2
    - name: Extract the tag
      id: get_tag
      run: |
        echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
  # freeze-cli:
  #   needs: extract-tag
  #   env:
  #     PYOX_VERSION: '0.7.0'
  #   strategy:
  #     matrix:
  #       os: [macos-latest, ubuntu-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #   - name: Clone the repo
  #     uses: actions/checkout@v2
  #   - name: Build instawow and rename the sdist to be picked up by PyOxidizer
  #     run: |
  #       python -m pip install nox
  #       python -m nox -s build
  #       mv dist/*.tar.gz instawow-standalone/instawow.tar.gz
  #       python -m nox -s clobber_build_artefacts
  #   - name: Install Rust toolchain
  #     uses: actions-rs/toolchain@v1
  #     with:
  #       profile: minimal
  #       toolchain: nightly
  #   - name: Install PyOxidizer
  #     run: |
  #       cargo install --version $PYOX_VERSION pyoxidizer
  #   - name: Freeze instawow and copy it into the 'dist' directory
  #     run: |
  #       mkdir -p dist
  #       pyoxidizer build --release | tee >(
  #         instawow_path=$(tail -n 1 | cut -c 23-)
  #         cp $instawow_path dist/${instawow_path##*[\\/]}
  #       )
  #     working-directory: instawow-standalone
  #   - name: Upload binary
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: instawow-cli-${{ matrix.os }}-${{ needs.extract-tag.outputs.tag }}
  #       path: instawow-standalone/dist/instawow*
  freeze-gui:
    needs: [extract-tag]
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Clone the repo
      uses: actions/checkout@v2
    - name: Install npm dependencies and compile frontend
      run: |
        npm install
        npx rollup -c
      working-directory: gui-webview/frontend
    - name: Install briefcase and build app
      run: |
        python -m pip install briefcase
        python -m briefcase build
        python -m briefcase package --no-sign | tee >(
          echo "artifact_path=gui-webview/$(tail -n 1 | cut -c 25-)" >> $GITHUB_ENV
        )
      working-directory: gui-webview
    - name: Upload app
      uses: actions/upload-artifact@v2
      with:
        name: instawow-gui-${{ matrix.os }}-${{ needs.extract-tag.outputs.tag }}
        path: ${{ env.artifact_path }}
