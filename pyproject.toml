[build-system]
requires = [
  "setuptools >=45",
  "setuptools-scm[toml] >=6",
  "toml",
]
build-backend = "setuptools.build_meta"

[project]
dynamic = [
  "version",
]
name = "instawow"
description = "CLI for managing World of Warcraft add-ons"
readme = "README.rst"
requires-python = ">=3.7"
license = { file = "COPYING" }
authors = [
  { name = "layday", email = "layday@protonmail.com" },
]
urls = { homepage = "http://github.com/layday/instawow" }
dependencies = [
  "aiohttp >=3.7.4, <4",
  "alembic >=1.4.3, <2",
  "click >=7.1, <9",
  "jellyfish >=0.8.2, <1",
  "jinja2 >=2.11, <4",
  "loguru <1",
  "pluggy ~=0.13",
  "prompt-toolkit >=3.0.15, <4",
  "pydantic >=1.8.2, <2",
  "questionary ~=1.8",
  "sqlalchemy >=1.3.19, <2",
  "typing-extensions >=3.10.0.0, <4",
  "yarl ~=1.4",
]

[project.optional-dependencies]
gui = [
  "aiohttp-rpc >=0.6.3",
  "cefpython3 ==66.1; platform_system == 'Windows'",
  "toga >=0.3.0.dev27",
  "toga-cocoa >=0.3.0.dev27; platform_system == 'Darwin'",
  "toga-gtk >=0.3.0.dev27; platform_system == 'Linux'",
  "toga-winforms >=0.3.0.dev27; platform_system == 'Windows'",
]
test = [
  "aresponses ~=2.0",
  "coverage[toml] ~=5.2",
  "pytest >=6.0.1, <7",
  "pytest-asyncio ~=0.14",
]
types = [
  'sqlalchemy2-stubs',
]

[project.scripts]
instawow = "instawow.cli:main"

[tool.setuptools_scm]
write_to = "src/instawow/_version.py"
write_to_template = "__version__ = '{version}'\n"


## TESTS ##

[tool.coverage.run]
branch = true
source = ["instawow"]
omit = ["instawow/migrations/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "def __repr__",
  "raise NotImplementedError",
  "if __name__ == ['\"]__main__['\"]:",
  "@overload",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
  "iw_no_mock",
]
xfail_strict = true


## TYPE CHECKING ##

[tool.pyright]
include = [
  "src",
  "gui-webview/src",
]
ignore = [
  "gui-webview/src/instawow_gui/cef_adapter.py",
]
useLibraryCodeForTypes = true
typeCheckingMode = "strict"
reportMissingTypeStubs = "information"
# `TYPE_CHECKING` and lazy imports produce spurious import cycle errors
reportImportCycles = false
reportUnknownArgumentType = "warning"
reportUnknownMemberType = false


## FORMATTING ##

[tool.black]
line_length = 99
skip_string_normalization = true
target_version = ["py37", "py38", "py39"]

[tool.isort]
profile = "black"
line_length = 99
combine_as_imports = true
force_sort_within_sections = true
